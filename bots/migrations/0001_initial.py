# Generated by Django 5.1.2 on 2024-12-14 18:35

import bots.models
import concurrency.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(editable=False, max_length=32, unique=True)),
                ('name', models.CharField(default='My bot', max_length=255)),
                ('meeting_url', models.CharField(max_length=511)),
                ('meeting_uuid', models.CharField(blank=True, max_length=511, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number')),
                ('state', models.IntegerField(choices=[(1, 'Ready'), (2, 'Joining'), (3, 'Joined - Not Recording'), (4, 'Joined - Recording'), (5, 'Leaving'), (6, 'Ended'), (7, 'Fatal Error'), (8, 'Waiting Room')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=255)),
                ('user_uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='bots.bot')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('object_id', models.CharField(editable=False, max_length=32, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projects', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='MediaBlob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(editable=False, max_length=32, unique=True)),
                ('blob', models.BinaryField()),
                ('content_type', models.CharField(choices=[('audio/mp3', 'MP3 Audio'), ('image/png', 'PNG Image')], max_length=255)),
                ('checksum', models.CharField(editable=False, max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('duration_ms', models.IntegerField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='media_blobs', to='bots.project')),
            ],
        ),
        migrations.CreateModel(
            name='Credentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credential_type', models.IntegerField(choices=[(1, 'Deepgram'), (2, 'Zoom OAuth')])),
                ('_encrypted_data', models.BinaryField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='bots.project')),
            ],
        ),
        migrations.AddField(
            model_name='bot',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bots', to='bots.project'),
        ),
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('object_id', models.CharField(editable=False, max_length=32, unique=True)),
                ('key_hash', models.CharField(max_length=64, unique=True)),
                ('disabled_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='bots.project')),
            ],
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording_type', models.IntegerField(choices=[(1, 'Audio and Video'), (2, 'Audio Only')])),
                ('transcription_type', models.IntegerField(choices=[(1, 'Non realtime'), (2, 'Realtime'), (3, 'No Transcription')])),
                ('is_default_recording', models.BooleanField(default=False)),
                ('state', models.IntegerField(choices=[(1, 'Not Started'), (2, 'In Progress'), (3, 'Complete'), (4, 'Failed')], default=1)),
                ('transcription_state', models.IntegerField(choices=[(1, 'Not Started'), (2, 'In Progress'), (3, 'Complete'), (4, 'Failed')], default=1)),
                ('transcription_provider', models.IntegerField(blank=True, choices=[(1, 'Deepgram')], null=True)),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('first_buffer_timestamp_ms', models.BigIntegerField(blank=True, null=True)),
                ('file', models.FileField(storage=bots.models.RecordingStorage(), upload_to='')),
                ('object_id', models.CharField(editable=False, max_length=32, unique=True)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', to='bots.bot')),
            ],
        ),
        migrations.CreateModel(
            name='Utterance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_blob', models.BinaryField()),
                ('audio_format', models.IntegerField(choices=[(1, 'PCM'), (2, 'MP3')], default=1)),
                ('timestamp_ms', models.BigIntegerField()),
                ('duration_ms', models.IntegerField()),
                ('transcription', models.JSONField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='utterances', to='bots.participant')),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utterances', to='bots.recording')),
            ],
        ),
        migrations.CreateModel(
            name='BotEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('old_state', models.IntegerField(choices=[(1, 'Ready'), (2, 'Joining'), (3, 'Joined - Not Recording'), (4, 'Joined - Recording'), (5, 'Leaving'), (6, 'Ended'), (7, 'Fatal Error'), (8, 'Waiting Room')])),
                ('new_state', models.IntegerField(choices=[(1, 'Ready'), (2, 'Joining'), (3, 'Joined - Not Recording'), (4, 'Joined - Recording'), (5, 'Leaving'), (6, 'Ended'), (7, 'Fatal Error'), (8, 'Waiting Room')])),
                ('event_type', models.IntegerField(choices=[(1, 'Bot Put in Waiting Room'), (2, 'Bot Joined Meeting'), (3, 'Bot Recording Permission Granted'), (4, 'Meeting Ended'), (5, 'Bot Left Meeting'), (6, 'Bot requested to join meeting'), (7, 'Bot Encountered Fatal error'), (8, 'Bot requested to leave meeting'), (9, 'Bot could not join meeting')])),
                ('event_sub_type', models.IntegerField(choices=[(1, 'Bot could not join meeting - Meeting Not Started - Waiting for Host'), (2, 'Fatal error - Process Terminated')], null=True)),
                ('debug_message', models.TextField(blank=True, null=True)),
                ('requested_bot_action_taken_at', models.DateTimeField(blank=True, null=True)),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number')),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bot_events', to='bots.bot')),
            ],
            options={
                'ordering': ['created_at'],
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('event_type', 7), ('event_sub_type', 2)), models.Q(('event_type', 9), ('event_sub_type', 1)), models.Q(models.Q(('event_type', 7), _negated=True), models.Q(('event_type', 9), _negated=True), ('event_sub_type__isnull', True)), _connector='OR'), name='valid_event_type_event_sub_type_combinations')],
            },
        ),
        migrations.CreateModel(
            name='BotMediaRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.IntegerField(choices=[(1, 'Image'), (2, 'Audio')])),
                ('state', models.IntegerField(choices=[(1, 'Enqueued'), (2, 'Playing'), (3, 'Dropped'), (4, 'Finished'), (5, 'Failed to Play')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_requests', to='bots.bot')),
                ('media_blob', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bot_media_requests', to='bots.mediablob')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('state', 2)), fields=('bot', 'media_type'), name='unique_playing_media_request_per_bot_and_type')],
            },
        ),
        migrations.AddConstraint(
            model_name='participant',
            constraint=models.UniqueConstraint(fields=('bot', 'uuid'), name='unique_participant_per_bot'),
        ),
        migrations.AddConstraint(
            model_name='mediablob',
            constraint=models.UniqueConstraint(fields=('project', 'checksum'), name='unique_project_blob'),
        ),
        migrations.AddConstraint(
            model_name='credentials',
            constraint=models.UniqueConstraint(fields=('project', 'credential_type'), name='unique_project_credentials'),
        ),
    ]
